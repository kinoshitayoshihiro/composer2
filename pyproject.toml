[build-system]
requires = ["poetry-core>=1.7.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "modular-composer"
version = "3.0.0"
description = "OtoKotoba Modular Composer"
authors = ["Harusan <haru@example.com>"]
readme = "README.md"
license = "MIT"
keywords = ["music", "midi", "generation", "plugin"]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
audioread = ">=2.1.9"
basic_pitch = { version = ">=0.3", python = "<3.12" }
librosa = ">=0.10"
mido = ">=1.2.10,<1.3"
music21 = ">=9.1"
numpy = ">=1.24"
pretty_midi = "^0.2"
pydantic = ">=2.7"
pydub = ">=0.25"
PyYAML = "^6.0"
soundfile = ">=0.12"
tomli = ">=2.0"
setuptools = "*"
websockets = ">=12.0"
torch = "^2.0"
pytorch-lightning = "^2.0"
scipy = "^1.10"

[tool.poetry.extras]
test = [
  "pytest",
  "pytest-cov",
  "mypy",
  "ruff",
  "music21",
  "scikit-learn",
  "librosa",
  "soundfile",
  "scipy",
  "pretty_midi",
  "mido",
  "python-rtmidi",
  "hdbscan",
  "PyYAML",
  "websockets",
]
audio = [
  "soundfile",
  "scipy",
]
velocity = [
  "numpy",
  "scipy",
]
groove = [
  "pretty_midi",
  "librosa",
]
gui = ["streamlit", "plotly"]
rnn = ["torch", "pytorch_lightning", "optuna"]
live = ["mido", "python-rtmidi"]
ml = ["scikit-learn"]
ai = [
  "transformers",
  "accelerate",
  "sentencepiece",
  "music21",
  "pretty_midi",
  "mido",
  "python-rtmidi",
  "hdbscan",
]
piano_ml = ["transformers", "torch"]
data_ops = ["hmmlearn"]
plugin = [
  "pybind11",
  "cmake",
  "ninja",
]

[tool.hatch.version]
path = "modular_composer/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["modular_composer", "utilities"]

[tool.poetry.scripts]
modcompose = "modular_composer.cli:main"
train-velocity = "scripts.train_velocity:main"

[tool.ruff]
target-version = "py310"
select = ["E", "F", "I", "UP"]
fix = true
line-length = 100
extend-exclude = [
  "generator/*",
  "utilities/*",
  "tests/*",
  "data/*",
  "Backup/*",
  "docs/*",
  "config/*",
  "midi_output/*",
  "scripts/*",
  "tools/*",
  "wheelhouse/*",
  "modular_composer.py",
  "emotion_humanizer.py",
  "groove_profile.py",
  "build_all_json.py",
  "run_generate_demo.sh",
  "setup.sh",
  "setup_project.sh",
  "streamlit_app/*",
]

[tool.ruff.lint]
select = ["E", "F", "I", "UP"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
disallow_untyped_defs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = ["yaml"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["plotly.*", "streamlit.*", "sounddevice.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
markers = [
  "ci_perf: performance gate",
  "stretch: stretch smoke tests",
  "packaging: packaging checks",
  "docs: documentation build",
]